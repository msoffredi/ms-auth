AWSTemplateFormatVersion: 2010-09-09
Description: RBAC authorization serverless microservice
Transform:
    - AWS::Serverless-2016-10-31

Parameters:
    SuperAdminEmail:
        Type: String
        Description: The email address of the default user to be added to the Cognito user pool by default
    CognitoUserPoolArn:
        Type: String
        Description: Imported Cognito User Pool Arn to use in the template

Globals:
    Function:
        Layers:
            - !Ref RuntimeDependenciesLayer
        Environment:
            Variables:
                SUPER_ADMIN_EMAIL: !Ref SuperAdminEmail
        Runtime: nodejs14.x
        MemorySize: 128
        Timeout: 100
    Api:
        Auth:
            Authorizers:
                MsAuthCognitoAuthorizer:
                    UserPoolArn: !Ref CognitoUserPoolArn
                    AuthType: COGNITO_USER_POOLS
            DefaultAuthorizer: MsAuthCognitoAuthorizer
        Cors:
            AllowMethods: "'GET,OPTIONS'"
            AllowHeaders: "'content-type'"
            AllowOrigin: "'*'"
            AllowCredentials: "'*'"

Resources:
    CognitoPretokenTriggerFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            Handler: dist/handlers/cognito-pretoken-trigger.handler
            Description: Pre-token trigger to add authorization to the id token
            Runtime: nodejs14.x
            Environment:
                Variables:
                    DYNAMODB_URI: ''
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBOperationsTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBModulesTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBPermissionsTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBRolesTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBUsersTable

    MsAuthEventsFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            Handler: dist/handlers/auth-events.handler
            Description: RBAC auth serverless microservice events handler
            Runtime: nodejs14.x
            Environment:
                Variables:
                    DYNAMODB_URI: ''
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBOperationsTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBModulesTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBPermissionsTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBRolesTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBUsersTable
                - Statement:
                      - Effect: Allow
                        Resource: '*'
                        Action:
                            - events:PutEvents

    MsAuthAPIFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            Handler: dist/handlers/auth-api.handler
            Description: RBAC auth serverless microservice API handler
            Runtime: nodejs14.x
            Environment:
                Variables:
                    DYNAMODB_URI: ''
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBOperationsTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBModulesTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBPermissionsTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBRolesTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBUsersTable
                - Statement:
                      - Effect: Allow
                        Resource: '*'
                        Action:
                            - events:PutEvents
            Events:
                Healthcheck:
                    Type: Api
                    Properties:
                        Path: /healthcheck
                        Auth:
                            Authorizer: NONE
                        Method: get
                # Operations endpoints
                OperationsV0Get:
                    Type: Api
                    Properties:
                        Path: /v0/operations
                        Method: get
                OperationsV0Post:
                    Type: Api
                    Properties:
                        Path: /v0/operations
                        Method: post
                OperationsV0Delete:
                    Type: Api
                    Properties:
                        Path: /v0/operations/{id}
                        Method: delete
                # Modules endpoints
                ModulesV0Get:
                    Type: Api
                    Properties:
                        Path: /v0/modules
                        Method: get
                ModulesV0Post:
                    Type: Api
                    Properties:
                        Path: /v0/modules
                        Method: post
                ModulesV0Delete:
                    Type: Api
                    Properties:
                        Path: /v0/modules/{id}
                        Method: delete
                # Permissions endpoints
                PermissionsV0Get:
                    Type: Api
                    Properties:
                        Path: /v0/permissions
                        Method: get
                PermissionsV0Post:
                    Type: Api
                    Properties:
                        Path: /v0/permissions
                        Method: post
                PermissionsV0Delete:
                    Type: Api
                    Properties:
                        Path: /v0/permissions/{id}
                        Method: delete
                PermissionsV0GetOne:
                    Type: Api
                    Properties:
                        Path: /v0/permissions/{id}
                        Method: get
                # Roles endpoints
                RolesV0Get:
                    Type: Api
                    Properties:
                        Path: /v0/roles
                        Method: get
                RolesV0Post:
                    Type: Api
                    Properties:
                        Path: /v0/roles
                        Method: post
                RolesV0Delete:
                    Type: Api
                    Properties:
                        Path: /v0/roles/{id}
                        Method: delete
                RolesV0GetOne:
                    Type: Api
                    Properties:
                        Path: /v0/roles/{id}
                        Method: get
                # Users endpoints
                UsersV0Get:
                    Type: Api
                    Properties:
                        Path: /v0/users
                        Method: get
                UsersV0Post:
                    Type: Api
                    Properties:
                        Path: /v0/users
                        Method: post
                UsersV0Delete:
                    Type: Api
                    Properties:
                        Path: /v0/users/{id}
                        Method: delete
                UsersV0GetOne:
                    Type: Api
                    Properties:
                        Path: /v0/users/{id}
                        Method: get

    # Shared layer with Lambda runtime dependencies
    RuntimeDependenciesLayer:
        Type: AWS::Serverless::LayerVersion
        Metadata:
            BuildMethod: makefile
        Properties:
            LayerName: 'ms-auth-dependencies'
            Description: Runtime dependencies for Lambdas
            ContentUri: ./
            CompatibleRuntimes:
                - nodejs14.x
            RetentionPolicy: Retain

    DynamoDBOperationsTable:
        Type: AWS::DynamoDB::Table
        Properties:
            BillingMode: PAY_PER_REQUEST
            TableName: ms-auth-operations
            AttributeDefinitions:
                - AttributeName: id
                  AttributeType: S
            KeySchema:
                - AttributeName: id
                  KeyType: HASH

    DynamoDBModulesTable:
        Type: AWS::DynamoDB::Table
        Properties:
            BillingMode: PAY_PER_REQUEST
            TableName: ms-auth-modules
            AttributeDefinitions:
                - AttributeName: id
                  AttributeType: S
            KeySchema:
                - AttributeName: id
                  KeyType: HASH

    DynamoDBPermissionsTable:
        Type: AWS::DynamoDB::Table
        Properties:
            BillingMode: PAY_PER_REQUEST
            TableName: ms-auth-permissions
            AttributeDefinitions:
                - AttributeName: id
                  AttributeType: S
            KeySchema:
                - AttributeName: id
                  KeyType: HASH

    DynamoDBRolesTable:
        Type: AWS::DynamoDB::Table
        Properties:
            BillingMode: PAY_PER_REQUEST
            TableName: ms-auth-roles
            AttributeDefinitions:
                - AttributeName: id
                  AttributeType: S
            KeySchema:
                - AttributeName: id
                  KeyType: HASH

    DynamoDBUsersTable:
        Type: AWS::DynamoDB::Table
        Properties:
            BillingMode: PAY_PER_REQUEST
            TableName: ms-auth-users
            AttributeDefinitions:
                - AttributeName: id
                  AttributeType: S
            KeySchema:
                - AttributeName: id
                  KeyType: HASH

    AuthInputUserDeletedEventRule:
        Type: AWS::Events::Rule
        Properties:
            Description: 'User deleted event for authorization service'
            EventPattern:
                source:
                    - 'user-service'
                detail:
                    type:
                        - 'user.deleted'
            State: 'ENABLED'
            Targets:
                - Arn: !GetAtt MsAuthEventsFunction.Arn
                  Id: 'authorization.input.user.deleted'

    PermissionForEventsToInvokeLambdaOnUserDeleted:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName:
                Ref: 'MsAuthEventsFunction'
            Action: 'lambda:InvokeFunction'
            Principal: 'events.amazonaws.com'
            SourceArn: !GetAtt AuthInputUserDeletedEventRule.Arn

    AuthInputUserCreatedEventRule:
        Type: AWS::Events::Rule
        Properties:
            Description: 'User created event for authorization service'
            EventPattern:
                source:
                    - 'user-service'
                detail:
                    type:
                        - 'user.created'
            State: 'ENABLED'
            Targets:
                - Arn: !GetAtt MsAuthEventsFunction.Arn
                  Id: 'authorization.input.user.created'

    PermissionForEventsToInvokeLambdaOnUserCreated:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName:
                Ref: 'MsAuthEventsFunction'
            Action: 'lambda:InvokeFunction'
            Principal: 'events.amazonaws.com'
            SourceArn: !GetAtt AuthInputUserCreatedEventRule.Arn

    PermissionForCognitoToInvokeLambda:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName:
                Ref: 'CognitoPretokenTriggerFunction'
            Action: 'lambda:InvokeFunction'
            Principal: 'cognito-idp.amazonaws.com'
            SourceArn: !Ref CognitoUserPoolArn
